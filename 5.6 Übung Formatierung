Geben Sie folgende Information gut lesbar auf der Konsole aus: String name, int id, double
wert:
<Name> (<id>): <wert, zwei Nachkommastellen>
Beispiel: (name = "Inge“, id = 23, Wert = 3.1415)
Ausgabe: "Inge (23): 3,14"

• JUnit-Testen
– Black-, Whitebox, Positiv-, Negativtest
– Projektabhängigkeiten, Imports
– @Test-Annotation
– assert*()


Code:

public class Strings {

    // Methode, um den Index eines bestimmten Zeichens in einem String zu finden
    private int indexOf(String text, char zeichen) {
        for (int i = 0; i < text.length(); i++) {
            if (text.charAt(i) == zeichen) {
                return i;
            }
        }
        return -1;
    }

    // Methode, um alle Leerzeichen am Anfang eines Strings zu entfernen
    private String trimVorne(String text) {
        for (int i = 0; i < text.length(); i++) {
            if (text.charAt(i) != ' ') {
                return text.substring(i);
            }
        }
        return "";
    }

    // Methode, um die geforderten Veränderungen an einem String vorzunehmen
    private String veraendern(String text) {
        return text.trim() // Leerzeichen am Anfang und Ende entfernen
                .replace("e", "E") // "e" durch "E" ersetzen
                + text.length(); // Länge des Strings anhängen
    }

    // Methode, um zu überprüfen, ob zwei Strings den gleichen Inhalt haben
    private boolean sindGleich(String text1, String text2) {
        if (text1 == null || text2 == null) {
            throw new IllegalArgumentException("Eingabe darf nicht null sein");
        }
        return text1.contains(text2) && text2.contains(text1);
    }

    public static void main(String[] args) {
        String name = "Inge";
        int id = 23;
        double wert = 3.1415;
        System.out.format("%s (%d): %.2f", name, id, wert); // Formatierung und Ausgabe der Informationen
    }
}


Ausgabe:

Inge (23): 3,14
