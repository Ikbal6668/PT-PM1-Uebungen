Schreiben Sie eine Klasse Karte, die eine Spielkarte repräsentiert. Eine solche Karte hat eine Far-
be und einen Wert. Die beiden möglichen Farben SCHWARZ und WEISS repräsentieren Sie als Kon-
stanten. Gültige Werte sind 1 . . . 10. Karte verfügt über eine Methode ausgeben(), um die Karten
(Farbe + Wert) auf der Konsole auszugeben. Außerdem bietet sie eine Methode
boolean istKleinerAls(Karte andere),
die wahr liefert, wenn die Karte ’kleiner’ ist als die andere. Weiße Karten sind immer kleiner als
schwarze. Bei gleicher Farbe entscheidet der Wert.

Schreiben Sie eine Klasse Hand, die fünf Karten in einem Array hält. Stellen Sie eine Methode aufnehmen()
bereit, mit der man fünf Karten (Parameter) in die Hand aufnehmen kann. Schreiben Sie außerdem
eine Methode ausgeben(), um alle Karten der Hand auf der Konsole auszugeben. Verwenden Sie
dabei intern die Methode ausgeben() der Hand-Klasse.




(Klasse Hand:)


package Kartenspiel;

import static Kartenspiel.Karte.SCHWARZ;
import static Kartenspiel.Karte.WEISS;

/**
 * Eine Hand enthält ein Blatt auf 5 Karten.
 */
public class Hand {

    /**
     * Die Karten werden als Array repräsentiert
     */
    private Karte[] karten;

    public Hand() {
        karten = new Karte[5];
    }

    /**
     * 5 Karten auf die Hand nehmen.
     */
    public void aufnehmen(Karte k1, Karte k2, Karte k3, Karte k4, Karte k5) {
        karten[0] = k1;
        karten[1] = k2;
        karten[2] = k3;
        karten[3] = k4;
        karten[4] = k5;
    }

    /**
     * Sortiert die Karten auf der Hand mit Hilfe der istKleinerAls()-Methode der Karten.
     */
    public void sortieren() {
        Karte[] tmp = new Karte[5];
        for (int i = 0; i < 5; i++) {
            int kleinste = 0;
            for (int j = 0; j < 5; j++) {
                if (karten[kleinste] == null || !karten[kleinste].istKleinerAls(karten[j])) {
                    kleinste = j;
                }
            }
            tmp[i] = karten[kleinste];
            karten[kleinste] = null;
        }
        karten = tmp;
    }

    /**
     * Gibt die Hand auf der Konsole aus.
     */
    public void ausgeben() {
        for (int i = 0; i < 5; i++) {
            karten[i].ausgeben();
        }
    }

    public static void main(String[] args) {
        Karte k1 = new Karte(WEISS, 5);
        Karte k2 = new Karte(SCHWARZ, 1);
        Karte k3 = new Karte(WEISS, 1);
        Karte k4 = new Karte(SCHWARZ, 7);
        Karte k5 = new Karte(SCHWARZ, 6);
        Hand hand = new Hand();
        hand.aufnehmen(k1, k2, k3, k4, k5);
        hand.ausgeben();
        hand.sortieren();
        System.out.println();
        hand.ausgeben();
    }
}


(Klasse Karte:)

package Kartenspiel;

/**
 * Eine Spielkarte hat eine Farbe und einen Wert. Als Farben sind SCHWARZ und WEISS möglich, die Werte gehen von
 * 1 ... 10;
 */
public class Karte {

    /**
     * Konstante zum Beschreiben der schwarzen Karten.
     */
    public static final String SCHWARZ = "SCHWARZ";

    /**
     * Konstante zum Beschreiben der weissen Karten
     */
    public static final String WEISS = "WEISS";

    /**
     * Farbe der Karte (SCHWARZ oder WEISS)
     */
    private String farbe;

    /**
     * Wert der Karte (1...10)
     */
    private int wert;

    public Karte(String farbe, int wert) {
        if (farbe != SCHWARZ && farbe != WEISS) {
            throw new IllegalArgumentException("Ungültige Farbe");
        }
        if (wert < 0 || wert > 10) {
            throw new IllegalArgumentException("Ungültiger Wert");
        }
        this.farbe = farbe;
        this.wert = wert;
    }

    /**
     * Sortierungsreihenfolge: die schwarzen karten kommen von der weissen, bei gleicher Farbe entscheidet der Wert
     */
    public boolean istKleinerAls(Karte andere) {
        if (andere == null) {
            return true;
        }
        if (farbe == WEISS && andere.farbe == SCHWARZ) {
            return true;
        } else if (farbe == SCHWARZ && andere.farbe == WEISS) {
            return false;
        } else {
            return wert <= andere.wert;
        }
    }

    /**
     * Gibt die Karte (Farbe + Wert) auf der Konsole aus.
     */
    public void ausgeben() {
        System.out.println(farbe + " " + wert);
    }
}


Ausgabe:

WEISS 5
SCHWARZ 1
WEISS 1
SCHWARZ 7
SCHWARZ 6

WEISS 1
WEISS 5
SCHWARZ 1
SCHWARZ 6
SCHWARZ 7
